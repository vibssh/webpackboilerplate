//Mixins

// Rem-to-px fallback mixin
$base-font-size: 16px;

@mixin remsize($prop, $px, $base: $base-font-size) {
    #{$prop}: $px;
    //#{$prop} : ($px / $base) * 1em;
    #{$prop}: ($px / $base) * 1rem;
    //
	 //Usage :
	 //	@include remsize(font-size, 20px);
	
	//
}

// Vertical Align within a box
@mixin vertical-align($t,$y) {
    position: relative;
    top: $t;
    @include transform(translateY($y));
}

// Hide Text to Show just background image
@mixin hide-text {
    display: block;
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}

// Centering an image
@mixin img-center {
    display: block;
    margin: 0 auto;
    text-align: center;
    max-width: 100%;
}
// Retina Images
@mixin image-2x($image,$width, $height, $type) {
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        /* on retina, use image that's scaled by 2 */
        background-image: url($image + "@2x." + $type);
        background-size: $width $height;
        background-repeat: no-repeat;
    }
    background-image: url($image + "." +$type);
    background-repeat: no-repeat;
}

// SVG with PNG Fallback
@mixin svg-bg($path,$name,$extension: png, $color: transparent, $position: 0 0, $repeat: no-repeat) {
  background: url(../../Images/#{$path}/#{$name}.#{$extension}) $color $position $repeat;
  background: none, url(../../Images/#{$path}/#{$name}.svg) $color $position $repeat;
}

//.background {
  /*
   * Here we can pass parameters: name, extension, color, position, repeat
   * with this example we will just repeat the graphic
   */
 // @include svg-bg('path','graphic-name', $repeat: repeat);
//}

